<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.ahdis</groupId>
	<artifactId>ipf-hapifhir-iti-example</artifactId>
	<version>1.0-SNAPSHOT</version>
	<description>IPF HAPI-FHIR IHE ITI springboot example</description>

	<packaging>war</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>1.11</maven.compiler.source>
		<maven.compiler.target>1.11</maven.compiler.target>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>

		<ipf-version>4.0-SNAPSHOT</ipf-version>
		<camel-version>3.2.0</camel-version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- IPF dependencies -->
			<dependency>
				<groupId>org.openehealth.ipf</groupId>
				<artifactId>ipf-dependencies</artifactId>
				<version>${ipf-version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<!-- Compile -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- IPF -->
		<dependency>
			<groupId>org.openehealth.ipf.boot</groupId>
			<artifactId>ipf-fhir-r4-spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jetty</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-fhir-r4-pixpdq</artifactId>
		</dependency>

		<dependency>
			<groupId>org.openehealth.ipf.platform-camel</groupId>
			<artifactId>ipf-platform-camel-ihe-fhir-r4-mhd</artifactId>
		</dependency>


		<!-- nsatisfied dependency expressed through field 'config'; nested exception 
			is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: 
			Error creating bean with name 'ipf.fhir-org.openehealth.ipf.boot.fhir.IpfFhirConfigurationProperties': 
			Could not bind properties to 'IpfFhirConfigurationProperties' : prefix=ipf.fhir, 
			ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is 
			javax.validation.NoProviderFoundException: Unable to create a Configuration, 
			because no Jakarta Bean Validation provider could be found. Add a provider 
			like Hibernate Validator (RI) to your classpath. -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>

		<!-- Development tools -->
		<dependency>
			<!-- Project Lombok is a boilerplate code remover and space saver that 
				generates code -->
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test</artifactId>
			<version>${camel-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<version>${camel-version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
